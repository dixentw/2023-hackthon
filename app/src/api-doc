{"swagger":"2.0","info":{"description":"Api Documentation","version":"1.0","title":"Api Documentation","termsOfService":"urn:tos","contact":{},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}},"host":"localhost:12345","basePath":"/","tags":[{"name":"api-v-1-controller","description":"Api V 1 Controller"},{"name":"api-v-2-controller","description":"Api V 2 Controller"}],"paths":{"/api/v1/push":{"post":{"tags":["api-v-1-controller"],"summary":"send a push notification","operationId":"sendUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"request","description":"request","required":true,"schema":{"$ref":"#/definitions/PushInterfaceRequestV2"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PushTaskResponse"}},"201":{"description":"Created"},"202":{"description":"accepted"},"400":{"description":"parameter error"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"500":{"description":"server error"}},"deprecated":true}},"/api/v2/push":{"post":{"tags":["api-v-2-controller"],"summary":"send push notification with semantics type LATER or IMMEDIATE ","operationId":"sendUsingPOST_1","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"request","description":"request","required":true,"schema":{"$ref":"#/definitions/PushInterfaceRequestV2"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PushTaskResponse"}},"201":{"description":"Created"},"202":{"description":"accepted"},"400":{"description":"parameter error"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"500":{"description":"server error"}}}}},"definitions":{"PushCandidate":{"type":"object","properties":{"label":{"type":"string","example":"LABEL","description":"Label to show on top of push notification, default is 'Smartnews'"},"linkId":{"type":"string","example":-1,"description":"Link ID. If not an indexed article, use \"-1\"."},"recommendType":{"type":"string","description":"For offline processing only."},"thumbnailUrl":{"type":"string","description":"Image URL for image to show on push notification"},"title":{"type":"string","example":"TITLE","description":"Text to show on push notification center."},"url":{"type":"string","example":"smartnews://openLink?url=https%3A%2F%2Ftoday.smartnews.com/20220101","description":"URL of the push link if an indexed article. Deep link starts with 'smartnews://'"}},"title":"PushCandidate","description":"Contents to deliver"},"PushInterfaceRequestV2":{"type":"object","properties":{"clientExpireTime":{"type":"string","example":"2023-07-04T12:08-0700","description":"Expiry time of this push message on the client side. This is handled at the client side itself and server just uses this attribute as the passthrough information. Format: ISO_8601 format (yyyy-MM-dd'T'HH:mmZ) "},"contentType":{"type":"string","example":"custom_link","description":"optional, custom_link for deep link, article for indexed article"},"customPayload":{"type":"string","description":"optional, the payload that overwrite everything at dispatch stage"},"deliveryPriority":{"type":"string","example":"alert","description":"optional"},"edition":{"type":"string","example":"en_US","description":"The edition push notification leads to","enum":["en_US","ja_JP"]},"expiredEpochSecond":{"type":"integer","format":"int32","example":0,"description":"If your push is time sensetive. e.g. Weather pushes. Please specify a expire Time, default is current time + 10 hours "},"pushCandidates":{"type":"array","items":{"$ref":"#/definitions/PushCandidate"}},"pushId":{"type":"integer","format":"int32","example":1234,"description":"If provided, will be used as Push ID, otherwise, default to expiredEpochSecond"},"pushStrategy":{"description":"mandatory, push strategy with IMMEDIATE or LATER. The value is fixed in v1, but required in v2","$ref":"#/definitions/PushStrategy"},"pushType":{"type":"string","example":"test_push","description":"An String to identfy a push or a series of pushes"},"pushVersion":{"type":"string","example":1.0,"description":"optional, push version"},"userQuery":{"$ref":"#/definitions/UserQuery"}},"title":"PushInterfaceRequestV2","description":"[V2] Payload for sending push notification"},"PushStrategy":{"type":"object","properties":{"pushSemantics":{"type":"string","example":"LATER","description":"Push Semantics","enum":["IMMEDIATE","LATER"]},"registrationDetails":{"description":"Push Registration Semantics. Applicable only when pushSemantics = LATER","$ref":"#/definitions/RegistrationDetails"}},"title":"PushStrategy","description":"Strategy for Push request semantics"},"PushTaskResponse":{"type":"object","properties":{"message":{"type":"string","description":"request process message"},"pushFunnelQueryId":{"type":"string","description":"the push funnel system query id"},"pushSemantics":{"type":"string","description":"LATER or IMMEDIATE"},"requestTraceId":{"type":"string","description":"the push request trace id"},"statusCode":{"type":"string","description":"request process status code","enum":["ACCEPTED","ALREADY_REPORTED","BAD_GATEWAY","BAD_REQUEST","BANDWIDTH_LIMIT_EXCEEDED","CHECKPOINT","CONFLICT","CONTINUE","CREATED","DESTINATION_LOCKED","EXPECTATION_FAILED","FAILED_DEPENDENCY","FORBIDDEN","FOUND","GATEWAY_TIMEOUT","GONE","HTTP_VERSION_NOT_SUPPORTED","IM_USED","INSUFFICIENT_SPACE_ON_RESOURCE","INSUFFICIENT_STORAGE","INTERNAL_SERVER_ERROR","I_AM_A_TEAPOT","LENGTH_REQUIRED","LOCKED","LOOP_DETECTED","METHOD_FAILURE","METHOD_NOT_ALLOWED","MOVED_PERMANENTLY","MOVED_TEMPORARILY","MULTIPLE_CHOICES","MULTI_STATUS","NETWORK_AUTHENTICATION_REQUIRED","NON_AUTHORITATIVE_INFORMATION","NOT_ACCEPTABLE","NOT_EXTENDED","NOT_FOUND","NOT_IMPLEMENTED","NOT_MODIFIED","NO_CONTENT","OK","PARTIAL_CONTENT","PAYLOAD_TOO_LARGE","PAYMENT_REQUIRED","PERMANENT_REDIRECT","PRECONDITION_FAILED","PRECONDITION_REQUIRED","PROCESSING","PROXY_AUTHENTICATION_REQUIRED","REQUESTED_RANGE_NOT_SATISFIABLE","REQUEST_ENTITY_TOO_LARGE","REQUEST_HEADER_FIELDS_TOO_LARGE","REQUEST_TIMEOUT","REQUEST_URI_TOO_LONG","RESET_CONTENT","SEE_OTHER","SERVICE_UNAVAILABLE","SWITCHING_PROTOCOLS","TEMPORARY_REDIRECT","TOO_EARLY","TOO_MANY_REQUESTS","UNAUTHORIZED","UNAVAILABLE_FOR_LEGAL_REASONS","UNPROCESSABLE_ENTITY","UNSUPPORTED_MEDIA_TYPE","UPGRADE_REQUIRED","URI_TOO_LONG","USE_PROXY","VARIANT_ALSO_NEGOTIATES"]}},"title":"PushTaskResponse","description":"accepted response"},"RegistrationDetails":{"type":"object","properties":{"dispatchExpireTime":{"type":"string","example":"2023-07-04T12:08-0700","description":"Expiry time of this push message while dispatching. If this time is reached, the message is discarded and not sent to the user. It can expect empty values. In case its empty, its set as dispatchTime + 60 minutesFormat: ISO_8601 format (yyyy-MM-dd'T'HH:mmZ)"},"dispatchTime":{"type":"string","example":"2023-07-04T12:08-0700","description":"Time when this message is expected to be delivered to the user. Format: ISO_8601 format (yyyy-MM-dd'T'HH:mmZ)"},"registerExpireTime":{"type":"string","example":"2023-07-04T12:08-0700","description":"Expiry time after which the message is deleted from the registration store. Format: ISO_8601 format (yyyy-MM-dd'T'HH:mmZ)."},"registerTimeElasticMinutes":{"type":"string","description":"Used only when registrationElasticity = RELATIVELY_ELASTIC. This is the maximum time bound a message is expected to be delayed for registration (granularity = minutes). In case the registration stream is very slow, and the registerTimeElasticMinutes is breached, the message is dropped and not registered in the system."},"registrationElasticity":{"type":"string","description":"Expected elasticity type for message registration.","enum":["ELASTIC","IN_ELASTIC"]}},"title":"RegistrationDetails"},"UserQuery":{"type":"object","properties":{"key":{"type":"string","example":"VIRTUAL_ID_LIST","description":"Query Key","enum":["GEO_ENVELOPE","SPECIFIED_TARGETING","VIRTUAL_ID_LIST"]},"value":{"type":"object","example":[YOUR_VIRTUAL_ID],"description":"Query Value, depends on query keys, the value should be following json format in this doc: https://www.notion.so/Push-Interface-3-0-User-Manual-5b55200f4f5c4eb9bf51f4bd7ee35e05"}},"title":"UserQuery","description":"Query parameters for users who can received pushes"}}}
